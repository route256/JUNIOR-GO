// Code generated by MockGen. DO NOT EDIT.
// Source: ./repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repository "gitlab.ozon.dev/workshop3/workshop-3/internal/pkg/repository"
)

// MockArticlesRepo is a mock of ArticlesRepo interface.
type MockArticlesRepo struct {
	ctrl     *gomock.Controller
	recorder *MockArticlesRepoMockRecorder
}

// MockArticlesRepoMockRecorder is the mock recorder for MockArticlesRepo.
type MockArticlesRepoMockRecorder struct {
	mock *MockArticlesRepo
}

// NewMockArticlesRepo creates a new mock instance.
func NewMockArticlesRepo(ctrl *gomock.Controller) *MockArticlesRepo {
	mock := &MockArticlesRepo{ctrl: ctrl}
	mock.recorder = &MockArticlesRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArticlesRepo) EXPECT() *MockArticlesRepoMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockArticlesRepo) Add(ctx context.Context, article *repository.Article) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", ctx, article)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockArticlesRepoMockRecorder) Add(ctx, article interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockArticlesRepo)(nil).Add), ctx, article)
}

// GetByID mocks base method.
func (m *MockArticlesRepo) GetByID(ctx context.Context, id int64) (*repository.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(*repository.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockArticlesRepoMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockArticlesRepo)(nil).GetByID), ctx, id)
}
